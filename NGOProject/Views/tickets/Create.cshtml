    @model NGOProject.Models.ticket

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Html.Partial("UserNavBar")

<h2>Filling Options</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <h4>Ticket Info</h4>
    <hr />
    <p style="white-space: pre-line">Customer Email: @Session["email"]</p>
    <p style="white-space: pre-line">Customer First Name: @Session["firstName"]</p>
    <p style="white-space: pre-line">Customer Last Name: @Session["lastName"]</p>
    <p style="white-space: pre-line">Please insert the remaining blanks to purchase ticket:</p>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.buyerPhone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.buyerPhone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.buyerPhone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.buyerAddress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.buyerAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.buyerAddress, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.totalAdult, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.totalAdult, new { htmlAttributes = new { @class = "form-control" } })

            @Html.ValidationMessageFor(model => model.totalAdult, "", new { @class = "text-danger" })
        </div>
    </div>
    <label text-align>*Confirm total number Adult</label>
    <input type="number" id="numAdult" />
    <div class="form-group">
        @Html.LabelFor(model => model.totalChildren, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.EditorFor(model => model.totalChildren, new { htmlAttributes = new { @class = "form-control", id = "numChildren" } })
            @Html.ValidationMessageFor(model => model.totalChildren, "", new { @class = "text-danger" })
        </div>
    </div>
    <label text-align>*Confirm total number Child</label>
    <input align="right" type="number" id="numChildren" />

    <div class="form-group" hidden >
        @Html.Label("Adult Price", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBox("Adult Price", (Decimal)ViewBag.adultPrice, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
        </div>
    </div>
    <div class="form-group" hidden>
        @Html.Label("Children Price", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBox("Children Price", (Decimal)ViewBag.childPrice, new { htmlAttributes = new { @class = "form-control", @disabled="disabled" } })
        </div>
    </div>

    <div class="form-group" hidden>
        @Html.LabelFor(model => model.eventID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.eventID, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.eventID } })
            @Html.ValidationMessageFor(model => model.eventID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="button" class="btn btn-info" id="add" value="add" name="calculate" onclick="hello()">Total Price Estimate</button>
            <input type="submit" value="Confirm Ticket Purchase" class="btn btn-default" />
        </div>
    </div>
</div>
}
<script>
    function hello() {

        var totalChild = document.getElementById("numChildren").value;
        var totalAdult = document.getElementById("numAdult").value;
        var priceAdult = parseFloat('@ViewBag.adultPrice');
        var priceChild = parseFloat('@ViewBag.childPrice');
        var totalTicketPrice = (totalChild * priceChild) + (totalAdult * priceAdult);
        alert("The total price of the ticket come up to :" + totalTicketPrice + "\n If accept, please click button Confirm Ticket Purchase to proceed with transaction");

    }
</script>

